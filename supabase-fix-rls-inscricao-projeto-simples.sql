-- ========================================
-- CORRIGIR POL√çTICAS RLS - VERS√ÉO SIMPLIFICADA
-- ========================================

-- Verificar se a tabela existe
SELECT 'Tabela inscricao_projeto existe:' as info, 
       EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'inscricao_projeto') as resultado;

-- Verificar estrutura da tabela
SELECT column_name, data_type, is_nullable 
FROM information_schema.columns 
WHERE table_name = 'inscricao_projeto' 
ORDER BY ordinal_position;

-- ========================================
-- SOLU√á√ÉO 1: DESABILITAR RLS TEMPORARIAMENTE
-- ========================================

-- Desabilitar RLS para permitir inser√ß√µes
ALTER TABLE inscricao_projeto DISABLE ROW LEVEL SECURITY;

-- ========================================
-- SOLU√á√ÉO 2: POL√çTICA PERMISSIVA (ALTERNATIVA)
-- ========================================

-- Se quiser manter RLS, use estas pol√≠ticas permissivas
-- (descomente se a solu√ß√£o 1 n√£o funcionar)

/*
-- Reabilitar RLS
ALTER TABLE inscricao_projeto ENABLE ROW LEVEL SECURITY;

-- Remover pol√≠ticas existentes
DROP POLICY IF EXISTS "Cooperados podem ver suas pr√≥prias inscri√ß√µes" ON inscricao_projeto;
DROP POLICY IF EXISTS "Cooperados podem criar inscri√ß√µes" ON inscricao_projeto;
DROP POLICY IF EXISTS "Admins podem ver todas as inscri√ß√µes" ON inscricao_projeto;
DROP POLICY IF EXISTS "Admins podem gerenciar inscri√ß√µes" ON inscricao_projeto;

-- Pol√≠tica permissiva para usu√°rios autenticados
CREATE POLICY "Usu√°rios autenticados podem ver inscri√ß√µes" ON inscricao_projeto
    FOR SELECT
    TO authenticated
    USING (true);

CREATE POLICY "Usu√°rios autenticados podem criar inscri√ß√µes" ON inscricao_projeto
    FOR INSERT
    TO authenticated
    WITH CHECK (true);

CREATE POLICY "Usu√°rios autenticados podem atualizar inscri√ß√µes" ON inscricao_projeto
    FOR UPDATE
    TO authenticated
    USING (true)
    WITH CHECK (true);

CREATE POLICY "Usu√°rios autenticados podem deletar inscri√ß√µes" ON inscricao_projeto
    FOR DELETE
    TO authenticated
    USING (true);
*/

-- ========================================
-- VERIFICAR RESULTADO
-- ========================================

-- Verificar se RLS est√° desabilitado
SELECT 
    schemaname,
    tablename,
    rowsecurity
FROM pg_tables 
WHERE tablename = 'inscricao_projeto';

-- Verificar pol√≠ticas existentes
SELECT 
    schemaname,
    tablename,
    policyname,
    permissive,
    roles,
    cmd
FROM pg_policies 
WHERE tablename = 'inscricao_projeto';

-- ========================================
-- TESTE DE INSER√á√ÉO
-- ========================================

-- Inserir um registro de teste (opcional)
-- Descomente se quiser testar a inser√ß√£o

/*
INSERT INTO inscricao_projeto (
    project_id,
    cooperado_id,
    status,
    data_inscricao,
    valor_interesse,
    forma_pagamento,
    prazo_interesse,
    observacoes,
    documentos_anexados,
    prioridade
) VALUES (
    'teste-project-id',
    'teste-cooperado-id',
    'pendente',
    NOW(),
    5000000,
    'dinheiro',
    12,
    'Teste de inser√ß√£o',
    '{}',
    5
);
*/

-- ========================================
-- MENSAGEM DE CONFIRMA√á√ÉO
-- ========================================

DO $$
BEGIN
    RAISE NOTICE '‚úÖ RLS desabilitado para a tabela inscricao_projeto!';
    RAISE NOTICE '';
    RAISE NOTICE 'üéØ Agora os cooperados devem conseguir criar inscri√ß√µes!';
    RAISE NOTICE '';
    RAISE NOTICE '‚ö†Ô∏è  IMPORTANTE:';
    RAISE NOTICE '   - RLS foi desabilitado temporariamente';
    RAISE NOTICE '   - Isso permite que usu√°rios autenticados criem inscri√ß√µes';
    RAISE NOTICE '   - Para maior seguran√ßa, configure pol√≠ticas RLS adequadas depois';
    RAISE NOTICE '';
    RAISE NOTICE 'üîß Para reabilitar RLS com pol√≠ticas adequadas:';
    RAISE NOTICE '   1. Execute o script completo de RLS';
    RAISE NOTICE '   2. Configure pol√≠ticas baseadas em user_id';
    RAISE NOTICE '   3. Teste as pol√≠ticas antes de usar em produ√ß√£o';
END $$;
