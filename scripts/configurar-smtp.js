import emailServiceDirect from '../src/services/EmailServiceDirect.js'
import dotenv from 'dotenv'

// Carregar vari√°veis de ambiente
dotenv.config()

async function configurarSMTP() {
  console.log('üîß Configurando SMTP para envio de e-mails...\n')
  
  try {
    // 1. Configura√ß√£o SMTP (exemplo com Gmail)
    console.log('1. Configurando SMTP...')
    const configSMTP = {
      servidor: "mail.hoteldompedro.co.ao ",
      porta: "465",
      email: "cooperativa@hoteldompedro.co.ao", // Substitua pelo e-mail real
      senha: "Cooperativa2024", // Substitua pela senha de app real
      nome_remetente: "Cooperativa Sanep"
    }
    
    console.log('üìß Configura√ß√£o SMTP:')
    console.log(`   Servidor: ${configSMTP.servidor}`)
    console.log(`   Porta: ${configSMTP.porta}`)
    console.log(`   Email: ${configSMTP.email}`)
    console.log(`   Remetente: ${configSMTP.nome_remetente}`)
    
    // Configurar o SMTP
    emailServiceDirect.configurarSMTP(configSMTP)
    console.log('‚úÖ SMTP configurado')
    
    // 2. Testar conex√£o
    console.log('\n2. Testando conex√£o SMTP...')
    try {
      await emailServiceDirect.testarConexao()
      console.log('‚úÖ Conex√£o SMTP funcionando')
    } catch (error) {
      console.log('‚ùå Erro na conex√£o SMTP:', error.message)
      console.log('üìù Verifique:')
      console.log('   - Se as credenciais est√£o corretas')
      console.log('   - Se a senha de app est√° habilitada (para Gmail)')
      console.log('   - Se o 2FA est√° configurado (para Gmail)')
      return
    }
    
    // 3. Enviar e-mail de teste
    console.log('\n3. Enviando e-mail de teste...')
    try {
      const resultado = await emailServiceDirect.enviarEmailTeste("teste@email.com")
      console.log('‚úÖ E-mail de teste enviado com sucesso!')
      console.log(`   Message ID: ${resultado.messageId}`)
    } catch (error) {
      console.log('‚ùå Erro ao enviar e-mail de teste:', error.message)
      return
    }
    
    // 4. Testar e-mail de boas-vindas
    console.log('\n4. Testando e-mail de boas-vindas...')
    const dadosCooperado = {
      nome_cooperado: "Jo√£o Silva Santos",
      numero_associado: "CS123456",
      email_cooperado: "joao.silva@email.com",
      nome_plano: "Plano Habita√ß√£o Premium",
      data_aprovacao: "30 de agosto de 2025",
      senha_temporaria: "ABC12345"
    }
    
    try {
      const resultado = await emailServiceDirect.enviarEmailBoasVindas(
        dadosCooperado.email_cooperado,
        dadosCooperado
      )
      console.log('‚úÖ E-mail de boas-vindas enviado com sucesso!')
      console.log(`   Message ID: ${resultado.messageId}`)
    } catch (error) {
      console.log('‚ùå Erro ao enviar e-mail de boas-vindas:', error.message)
      return
    }
    
    // 5. Resumo final
    console.log('\nüéâ Configura√ß√£o SMTP conclu√≠da com sucesso!')
    console.log('‚úÖ SMTP configurado e funcionando')
    console.log('‚úÖ E-mails de teste enviados')
    console.log('‚úÖ Sistema pronto para envio autom√°tico')
    
    console.log('\nüìã Pr√≥ximos passos:')
    console.log('1. ‚úÖ SMTP configurado')
    console.log('2. ‚úÖ E-mails de teste funcionando')
    console.log('3. üîÑ Aprovar inscri√ß√µes para enviar e-mails autom√°ticos')
    console.log('4. üìä Monitorar logs de envio')
    console.log('5. üìß Verificar e-mails recebidos pelos cooperados')
    
    console.log('\nüöÄ Sistema de e-mail pronto para uso!')
    
  } catch (error) {
    console.error('‚ùå Erro durante configura√ß√£o:', error.message)
  }
}

configurarSMTP()
