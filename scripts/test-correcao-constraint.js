#!/usr/bin/env node

console.log('üîß CORRE√á√ÉO DA CONSTRAINT METODO_PAGAMENTO');
console.log('');

console.log('üéØ PROBLEMA IDENTIFICADO:');
console.log('='.repeat(60));
console.log('‚ùå Erro: "new row for relation "pagamentos" violates check constraint "pagamentos_metodo_pagamento_check"');
console.log('‚ùå Causa: A constraint n√£o permite o valor "pendente" para metodo_pagamento');
console.log('='.repeat(60));

console.log('');
console.log('üìã DADOS QUE FALHARAM:');
console.log('');

console.log('‚úÖ cooperado_id: "16d4996a-70f9-49a2-8d29-dc3650160460"');
console.log('‚úÖ assinatura_plano_id: "1dc9b806-7e66-4d74-a365-6842fb135e6d"');
console.log('‚úÖ valor: 10000');
console.log('‚úÖ data_vencimento: "2025-09-30"');
console.log('‚úÖ tipo: "taxa_inscricao"');
console.log('‚úÖ status: "pendente"');
console.log('‚ùå metodo_pagamento: "pendente" ‚Üê PROBLEMA AQUI');
console.log('‚úÖ referencia: "TAXA-CS116659-1756602120403"');

console.log('');
console.log('üîß SOLU√á√ÉO:');
console.log('');

console.log('1Ô∏è‚É£ EXECUTAR SQL DE CORRE√á√ÉO:');
console.log('   - Execute: supabase-fix-metodo-pagamento-constraint.sql');
console.log('   - Remove a constraint problem√°tica');
console.log('   - Cria nova constraint que permite "pendente"');

console.log('');
console.log('2Ô∏è‚É£ VALORES PERMITIDOS AP√ìS CORRE√á√ÉO:');
console.log('   - pendente');
console.log('   - cartao_credito');
console.log('   - cartao_debito');
console.log('   - transferencia_bancaria');
console.log('   - dinheiro');
console.log('   - cheque');
console.log('   - mbway');
console.log('   - multibanco');
console.log('   - paypal');
console.log('   - stripe');
console.log('   - outro');

console.log('');
console.log('üîç SQL PARA EXECUTAR:');
console.log('');

console.log(`
-- 1. Verificar constraint atual
SELECT 
    conname as constraint_name,
    pg_get_constraintdef(oid) as constraint_definition
FROM pg_constraint 
WHERE conrelid = 'pagamentos'::regclass 
AND contype = 'c'
AND pg_get_constraintdef(oid) LIKE '%metodo_pagamento%';

-- 2. Remover constraint problem√°tica
ALTER TABLE pagamentos 
DROP CONSTRAINT IF EXISTS pagamentos_metodo_pagamento_check;

-- 3. Criar nova constraint
ALTER TABLE pagamentos 
ADD CONSTRAINT pagamentos_metodo_pagamento_check 
CHECK (metodo_pagamento IN (
    'pendente',
    'cartao_credito',
    'cartao_debito',
    'transferencia_bancaria',
    'dinheiro',
    'cheque',
    'mbway',
    'multibanco',
    'paypal',
    'stripe',
    'outro'
));
`);

console.log('');
console.log('üìã PASSO A PASSO PARA CORRE√á√ÉO:');
console.log('');

console.log('1Ô∏è‚É£ EXECUTAR CORRE√á√ÉO:');
console.log('   - Acesse o Supabase Dashboard');
console.log('   - V√° para SQL Editor');
console.log('   - Execute o arquivo: supabase-fix-metodo-pagamento-constraint.sql');
console.log('   - Verifique se n√£o h√° erros');

console.log('');
console.log('2Ô∏è‚É£ VERIFICAR CORRE√á√ÉO:');
console.log('   - Execute o SQL de verifica√ß√£o');
console.log('   - Confirme que a nova constraint foi criada');
console.log('   - Verifique se "pendente" est√° na lista');

console.log('');
console.log('3Ô∏è‚É£ TESTAR CRIA√á√ÉO:');
console.log('   - Aprove uma inscri√ß√£o novamente');
console.log('   - Verifique os logs no console');
console.log('   - Confirme que n√£o h√° mais erro de constraint');

console.log('');
console.log('4Ô∏è‚É£ VERIFICAR PAGAMENTO:');
console.log('   - Fa√ßa login com o cooperado');
console.log('   - Verifique se o pagamento aparece');
console.log('   - Teste o fluxo completo');

console.log('');
console.log('üîç LOGS ESPERADOS AP√ìS CORRE√á√ÉO:');
console.log('');

console.log('‚úÖ APROVA√á√ÉO DE INSCRI√á√ÉO:');
console.log('   - "üí∞ Criando pagamento pendente para taxa de inscri√ß√£o..."');
console.log('   - "üìã Dados do pagamento: ..."');
console.log('   - "‚úÖ Pagamento criado com sucesso: ..."');
console.log('   - "üÜî ID do pagamento criado: ..."');
console.log('   - N√ÉO deve aparecer erro de constraint');

console.log('');
console.log('‚úÖ P√ÅGINA DE PAGAMENTO:');
console.log('   - "üîç Buscando pagamentos com filtros: ..."');
console.log('   - "üí∞ Pagamentos pendentes encontrados: [Array com 1 item]"');
console.log('   - "üìä Total de pagamentos encontrados: 1"');

console.log('');
console.log('‚ùå SE AINDA HOUVER PROBLEMA:');
console.log('   - "‚ùå Erro ao criar pagamento: [outro erro]"');
console.log('   - Verificar se a constraint foi realmente removida');
console.log('   - Verificar se a nova constraint foi criada');

console.log('');
console.log('üîç VERIFICA√á√ïES ADICIONAIS:');
console.log('');

console.log('üìÑ Verificar se a constraint foi removida:');
console.log(`
SELECT 
    conname,
    pg_get_constraintdef(oid)
FROM pg_constraint 
WHERE conrelid = 'pagamentos'::regclass 
AND contype = 'c'
AND pg_get_constraintdef(oid) LIKE '%metodo_pagamento%';
`);

console.log('');
console.log('üìÑ Verificar pagamentos criados:');
console.log(`
SELECT 
    id,
    cooperado_id,
    valor,
    tipo,
    status,
    metodo_pagamento,
    referencia
FROM pagamentos 
WHERE tipo = 'taxa_inscricao'
ORDER BY created_at DESC;
`);

console.log('');
console.log('üéØ TESTE ESPEC√çFICO:');
console.log('');

console.log('1. Execute o SQL de corre√ß√£o');
console.log('2. Verifique se a constraint foi atualizada');
console.log('3. Aprove uma inscri√ß√£o novamente');
console.log('4. Verifique os logs no console');
console.log('5. Teste o login do cooperado');
console.log('6. Confirme que o pagamento aparece');

console.log('');
console.log('‚úÖ SISTEMA PRONTO PARA CORRE√á√ÉO!');
console.log('üöÄ Execute o SQL e teste novamente a aprova√ß√£o de inscri√ß√£o');
