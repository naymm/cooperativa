#!/usr/bin/env node

console.log('üîê CORRE√á√ÉO DAS POL√çTICAS RLS SUPABASE');
console.log('');

console.log('‚ùå ERRO IDENTIFICADO:');
console.log('"new row violates row-level security policy"');
console.log('');

console.log('‚úÖ SOLU√á√ÉO: CONFIGURAR POL√çTICAS RLS');
console.log('='.repeat(60));
console.log('1. üóÇÔ∏è Criar bucket "documentos" (se n√£o existir)');
console.log('2. üîê Configurar pol√≠ticas RLS corretas');
console.log('3. üì§ Permitir upload an√¥nimo');
console.log('4. üì• Permitir download p√∫blico');
console.log('5. üóëÔ∏è Permitir remo√ß√£o (opcional)');
console.log('='.repeat(60));

console.log('');
console.log('üìã PASSO A PASSO NO SUPABASE DASHBOARD:');
console.log('');

console.log('1Ô∏è‚É£ CRIAR BUCKET (se n√£o existir):');
console.log('   Dashboard ‚Üí Storage ‚Üí New bucket');
console.log('   Nome: documentos');
console.log('   Public bucket: ‚úÖ MARQUE');
console.log('   File size limit: 5MB');
console.log('   Allowed MIME types: image/*,application/pdf');

console.log('');
console.log('2Ô∏è‚É£ CONFIGURAR POL√çTICAS RLS:');
console.log('   Dashboard ‚Üí Storage ‚Üí documentos ‚Üí Policies');
console.log('   Clique em "New policy"');
console.log('');

console.log('üì§ POL√çTICA 1: PERMITIR UPLOAD (INSERT)');
console.log('Nome: "Permitir upload an√¥nimo"');
console.log('Target roles: public');
console.log('Using expression:');
console.log('bucket_id = \'documentos\'');

console.log('');
console.log('üì• POL√çTICA 2: PERMITIR DOWNLOAD (SELECT)');
console.log('Nome: "Acesso p√∫blico aos documentos"');
console.log('Target roles: public');
console.log('Using expression:');
console.log('bucket_id = \'documentos\'');

console.log('');
console.log('üóëÔ∏è POL√çTICA 3: PERMITIR REMO√á√ÉO (DELETE)');
console.log('Nome: "Permitir remo√ß√£o an√¥nima"');
console.log('Target roles: public');
console.log('Using expression:');
console.log('bucket_id = \'documentos\'');

console.log('');
console.log('üîß SQL PARA EXECUTAR NO SUPABASE SQL EDITOR:');
console.log('='.repeat(60));

console.log(`
-- 1. Criar bucket (se n√£o existir)
INSERT INTO storage.buckets (id, name, public, file_size_limit, allowed_mime_types)
VALUES ('documentos', 'documentos', true, 5242880, ARRAY['image/jpeg', 'image/jpg', 'image/png', 'application/pdf'])
ON CONFLICT (id) DO UPDATE SET 
  public = true,
  file_size_limit = 5242880,
  allowed_mime_types = ARRAY['image/jpeg', 'image/jpg', 'image/png', 'application/pdf'];

-- 2. Pol√≠tica para upload (INSERT)
CREATE POLICY "Permitir upload an√¥nimo" ON storage.objects
FOR INSERT WITH CHECK (bucket_id = 'documentos');

-- 3. Pol√≠tica para download (SELECT)
CREATE POLICY "Acesso p√∫blico aos documentos" ON storage.objects
FOR SELECT USING (bucket_id = 'documentos');

-- 4. Pol√≠tica para remo√ß√£o (DELETE)
CREATE POLICY "Permitir remo√ß√£o an√¥nima" ON storage.objects
FOR DELETE USING (bucket_id = 'documentos');
`);

console.log('');
console.log('üéØ ALTERNATIVA: DESABILITAR RLS TEMPORARIAMENTE');
console.log('Se quiser uma solu√ß√£o r√°pida:');
console.log('Dashboard ‚Üí Storage ‚Üí documentos ‚Üí Settings');
console.log('Desmarque "Enable Row Level Security (RLS)"');
console.log('‚ö†Ô∏è ATEN√á√ÉO: Isso remove toda a seguran√ßa!');

console.log('');
console.log('üîç VERIFICA√á√ÉO AP√ìS CONFIGURA√á√ÉO:');
console.log('1. Bucket "documentos" existe e √© p√∫blico');
console.log('2. Pol√≠ticas RLS est√£o configuradas');
console.log('3. Teste de upload funciona');
console.log('4. URLs p√∫blicas s√£o acess√≠veis');

console.log('');
console.log('üìä LOGS ESPERADOS AP√ìS CORRE√á√ÉO:');
console.log('üì§ Iniciando upload para Supabase: [nome_arquivo]');
console.log(' Tamanho do arquivo: X.XX MB');
console.log(' Caminho do arquivo: documentos/[nome]');
console.log('üì§ Upload realizado com sucesso: [dados]');
console.log('‚úÖ Upload conclu√≠do: [url_publica]');

console.log('');
console.log('‚úÖ SISTEMA PRONTO PARA CORRE√á√ÉO!');
console.log('üöÄ Execute as configura√ß√µes no Supabase e teste novamente');
